执行工作流（流式响应）
https://api.coze.cn/v1/workflow/stream_run
权限点: Workflow.run
执行已发布的工作流，响应方式为流式响应。
接口说明
调用 API 执行工作流时，对于支持流式输出的工作流，往往需要使用流式响应方式接收响应数据，例如实时展示工作流的输出信息、呈现打字机效果等。
在流式响应中，服务端不会一次性发送所有数据，而是以数据流的形式逐条发送数据给客户端，数据流中包含工作流执行过程中触发的各种事件（event），直至处理完毕或处理中断。处理结束后，服务端会通过 event: Done 事件提示工作流执行完毕。各个事件的说明可参考返回结果。
目前支持流式响应的工作流节点包括消息节点、问答节点和开启了流式输出的结束节点。对于不包含这些节点的工作流，可以使用执行工作流接口一次性接收响应数据。
限制说明
此接口为同步接口，如果工作流整体或某些节点运行超时，Bot 可能无法提供符合预期的回复。同步执行时，工作流整体超时时间限制可参考工作流使用限制。
通过 API 方式执行工作流前，应确认此工作流已发布，执行从未发布过的工作流时会返回错误码 4200。创建并发布工作流的操作可参考使用工作流。
调用此 API 之前，应先在扣子平台中试运行此工作流，如果试运行时需要关联智能体，则调用此 API 执行工作流时，也需要指定智能体 ID。通常情况下，执行存在数据库节点、变量节点等节点的工作流需要关联智能体。

image
Header
token
扣子 API 通过访问令牌进行 API 请求的鉴权。
展开全部
pat_taUrJDxRQyj5AX0mn7DCpkO3pG2GKamXbEgMUQDlT5xaIg9LVWT7S8ORTmB8Ivb1
Body params
workflow_id
待执行的 Workflow ID，此工作流应已发布。
展开全部
7452643411533053988
parameters
工作流开始节点的输入参数及取值，你可以在指定工作流的编排页面查看参数列表。
{
    "BOT_USER_INPUT": "我叫小名，我11岁了"
}
bot_id
需要关联的智能体 ID。
展开全部
7452640560135438375
ext
用于指定一些额外的字段，以 Map 格式传入。
展开全部
key_1
Enter value





logo
搭建指南
开发指南
扣子专业版
搜索
目录
大纲
API 和 SDK
API 参考
API 介绍
更新日志
准备工作
鉴权
接口
API 概览
空间
智能体
会话
消息
对话
文件
工作流
执行工作流
执行工作流（流式响应）
恢复运行工作流
查询工作流异步执行结果
执行对话流
知识库
语音
错误码
历史版本接口
最佳实践
SDK 参考
Chat SDK
Python SDK
Node.js SDK
Java SDK
执行工作流（流式响应）
执行已发布的工作流，响应方式为流式响应。​
接口说明​
调用 API 执行工作流时，对于支持流式输出的工作流，往往需要使用流式响应方式接收响应数据，例如实时展示工作流的输出信息、呈现打字机效果等。​
在流式响应中，服务端不会一次性发送所有数据，而是以数据流的形式逐条发送数据给客户端，数据流中包含工作流执行过程中触发的各种事件（event），直至处理完毕或处理中断。处理结束后，服务端会通过 event: Done 事件提示工作流执行完毕。各个事件的说明可参考​返回结果。​
目前支持流式响应的工作流节点包括消息节点、问答节点和开启了流式输出的结束节点。对于不包含这些节点的工作流，可以使用​执行工作流接口一次性接收响应数据。​
​
限制说明​
此接口为同步接口，如果工作流整体或某些节点运行超时，Bot 可能无法提供符合预期的回复。同步执行时，工作流整体超时时间限制可参考​工作流使用限制。​
通过 API 方式执行工作流前，应确认此工作流已发布，执行从未发布过的工作流时会返回错误码 4200。创建并发布工作流的操作可参考​使用工作流。​
调用此 API 之前，应先在扣子平台中试运行此工作流，如果试运行时需要关联智能体，则调用此 API 执行工作流时，也需要指定智能体ID。通常情况下，执行存在数据库节点、变量节点等节点的工作流需要关联智能体。​
​
​​

​
​
​
基础信息​
​
请求方式​
POST​
请求地址​
​
https://api.coze.cn/v1/workflow/stream_run​
​
权限​
run​
确保调用该接口使用的个人令牌开通了 run 权限，详细信息参考​鉴权方式。​
接口说明​
执行已发布的工作流，响应方式为流式响应。​
​
Header​
​
参数​
取值​
说明​
Authorization​
Bearer $Access_Token​
用于验证客户端身份的访问令牌。你可以在扣子平台中生成访问令牌，详细信息，参考​准备工作。​
Content-Type​
application/json​
解释请求正文的方式。​
​
​
​
Body​
​
参数​
类型​
是否必选​
说明​
workflow_id​
String ​
必选​
待执行的 Workflow ID，此工作流应已发布。​
进入 Workflow 编排页面，在页面 URL 中，workflow 参数后的数字就是 Workflow ID。例如 https://www.coze.com/work_flow?space_id=42463***&workflow_id=73505836754923***，Workflow ID 为 73505836754923***。​
parameters​
map[String]Any​
可选​
工作流开始节点的输入参数及取值，你可以在指定工作流的编排页面查看参数列表。​
bot_id​
​
String ​
​
可选​
​
需要关联的智能体ID。 部分工作流执行时需要指定关联的智能体，例如存在数据库节点、变量节点等节点的工作流。​
​
​​

​
​
进入智能体的开发页面，开发页面 URL 中 bot 参数后的数字就是智能体ID。例如 https://www.coze.com/space/341****/bot/73428668*****，Bot ID 为 73428668*****。 ​
确保调用该接口使用的令牌开通了此智能体所在空间的权限。​
确保该智能体已发布为 API 服务。​
​
ext​
Map[String][String]​
​
可选​
用于指定一些额外的字段，以 Map[String][String] 格式传入。例如某些插件 会隐式用到的经纬度等字段。​
目前仅支持以下字段：​
atitude：String 类型，表示经度。​
longitude：String 类型，表示纬度。​
user_id：Integer 类型，表示用户 ID。​
app_id​
String​
可选​
工作流所在的应用 ID。​
你可以通过应用的业务编排页面 URL 中获取应用 ID，也就是 URL 中 project-ide 参数后的一串字符，例如 https://www.coze.cn/space/739174157340921****/project-ide/743996105122521****/workflow/744102227704147**** 中，应用的 ID 为 743996105122521****。​
仅运行扣子应用中的工作流时，才需要设置 app_id。智能体绑定的工作流、空间资源库中的工作流无需设置 app_id。​
​
​
返回结果​
​
在流式响应中，开发者需要注意是否存在丢包现象。​
事件 ID（id）默认从 0 开始计数，以包含 event: Done 的事件为结束标志。开发者应根据 id 确认响应消息整体无丢包现象。​
Message 事件的消息 ID 默认从 0 开始计数，以包含 node_is_finish : true 的事件为结束标志。开发者应根据 node_seq_id 确认 Message 事件中每条消息均完整返回，无丢包现象。​
​
​
参数名​
参数类型​
参数描述​
id​
Integer​
此消息在接口响应中的事件 ID。以 0 为开始。​
event​
String ​
当前流式返回的数据包事件。包括以下类型：​
Message：工作流节点输出消息，例如消息节点、结束节点的输出消息。可以在 data 中查看具体的消息内容。​
Error：报错。可以在 data 中查看 error_code 和 error_message，排查问题。​
Done：结束。表示工作流执行结束，此时 data 为空。​
Interrupt：中断。表示工作流中断，此时 data 字段中包含具体的中断信息。​
data​
Object​
事件内容。各个 event 类型的事件内容格式不同。​
​
Message 事件​
Message 事件中，data 的结构如下：​
​
参数名​
参数类型​
参数描述​
content​
String ​
流式输出的消息内容。​
node_title​
String​
输出消息的节点名称，例如消息节点、结束节点。​
node_seq_id​
String​
此消息在节点中的消息 ID，从 0 开始计数，例如消息节点的第 5 条消息。​
node_is_finish​
Boolean​
当前消息是否为此节点的最后一个数据包。​
ext​
Map[String]String​
额外字段。​
cost​
String ​
预留字段，无需关注。​
​
Interrupt 事件​
Interrupt 事件中，data 的结构如下：​
​
参数名​
参数类型​
参数描述​
interrupt_data​
Object​
中断控制内容。​
interrupt_data.event_id​
String​
工作流中断事件 ID，恢复运行时应回传此字段。​
interrupt_data.type​
Integer​
工作流中断类型，恢复运行时应回传此字段。​
node_title​
String​
输出消息的节点名称，例如“问答”。​
​
Error 事件​
Error 事件中，data 的结构如下：​
​
参数名​
参数类型​
参数描述​
error_code​
Integer​
调用状态码。 ​
0 表示调用成功。 ​
其他值表示调用失败。你可以通过 error_message 字段判断详细的错误原因。​
error_message​
String ​
状态信息。API 调用失败时可通过此字段查看详细错误信息。​
​
​
​
示例​
请求示例​
​
curl --location --request POST 'https://api.coze.cn/v1/workflow/stream_run' \​
--header 'Authorization: Bearer pat_fhwefweuk****' \​
--header 'Content-Type: application/json' \​
--data-raw '{​
    "workflow_id": "73664689170551*****",​
    "parameters": {​
        "user_id":"12345",​
        "user_name":"George"​
    }​
}'​
​
响应示例​
​
id: 0​
event: Message​
data: {"content":"msg","node_is_finish":false,"node_seq_id":"0","node_title":"Message"}​
​
id: 1​
event: Message​
data: {"content":"为","node_is_finish":false,"node_seq_id":"1","node_title":"Message"}​
​
id: 2​
event: Message​
data: {"content":"什么小明要带一把尺子去看电影？\n因","node_is_finish":false,"node_seq_id":"2","node_title":"Message"}​
​
id: 3​
event: Message​
data: {"content":"为他听说电影很长，怕","node_is_finish":false,"node_seq_id":"3","node_title":"Message"}​
​
id: 4​
event: Message​
data: {"content":"坐不下！","node_is_finish":true,"node_seq_id":"4","node_title":"Message"}​
​
id: 5​
event: Message​
data: {"content":"{\"output\":\"为什么小明要带一把尺子去看电影？\\n因为他听说电影很长，怕坐不下！\"}","cost":"0.00","node_is_finish":true,"node_seq_id":"0","node_title":"","token":0}​
​
id: 6​
event: Done​
data: {}​
​
​
错误码​
如果成功调用扣子的 API，返回信息中 code 字段为 0。如果状态码为其他值，则表示接口调用失败。此时 msg 字段中包含详细错误信息，你可以参考​错误码文档查看对应的解决方法。​
​
上一篇
下一篇

接口说明
限制说明
基础信息
Header
Body
返回结果
Message 事件
Interrupt 事件
Error 事件
示例
请求示例
响应示例
错误码
